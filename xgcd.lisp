(defun gcdex (f g)
  )
(defun $gcdinv (f g)
  (if (zerop f)
      (values g 0)
      (multiple-value-bind (d a b) (gcdex f g)
        (values d a))))
(defun $xgcd (f g)
  (let ((d 0)
        (a 0)
        (b 0))
    (cond ((zerop f)
           (setf d (abs g))
           (setf b (signum g)))
          ((= f g)
           (if (> (signum f) 0)
               (setf d f a 1)
               (setf d (- f) a -1)))
          (t
           (let ((sign1 (signum f))
                 (sign2 (signum g))
                 (f1 (abs f))
                 (g1 (abs g)))
             (if (< f1 g1)
                 ()))))))
